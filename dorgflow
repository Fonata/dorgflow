#!/usr/bin/env php
<?php

namespace Dorgflow;

require_once __DIR__ . '/vendor/autoload.php';

use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\DependencyInjection\Loader\PhpFileLoader;

$container = new ContainerBuilder();
// Don't bother with PhpFileLoader; it's overkill.
require 'services.php';

print "Hello, this is Dorgflow!\n";

$command_class_name = CommandResolver::getCommandClass($argv);

// Helper objects to inject.
// TODO: use a dedicated container class and inject that instead?
$git = new \Dorgflow\Executor\Git();
$situation = new \Dorgflow\Situation($git);
// $analyser = new Analyser... ?

$command = new $command_class_name($situation, $git);

try {
  $command->execute();
}
catch (\Exception $e) {
  print $e->getMessage() . "\n";
}
